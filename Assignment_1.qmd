---
title: "Sok-1005_Assignment_1"
author: Daniel Johannessen. kandidat nummer 3
format: html
editor: visual
---

## Assignment 1 Reading static webpages. 

We start by gathering the data we need and getting all our packages

The data is:
Lower-Troposphere\
Mid-Troposphere\
Tropopause\
Lower-Stratosphere

```{r, warning=False}
rm(list=ls()) #emptying enviroment
library(tidyverse)
library(lubridate)
library(zoo)


lower <- read_table("http://vortex.nsstc.uah.edu/data/msu/v6.0/tlt/uahncdc_lt_6.0.txt")
mid <- read_table("http://vortex.nsstc.uah.edu/data/msu/v6.0/tmt/uahncdc_mt_6.0.txt")
tropopause <- read_table("http://vortex.nsstc.uah.edu/data/msu/v6.0/ttp/uahncdc_tp_6.0.txt")
stratosphere <- read_table("http://vortex.nsstc.uah.edu/data/msu/v6.0/tls/uahncdc_ls_6.0.txt")
```

Now that we have gotten our data and our packages, i start with removing the last rows in the dataset that contains comments that we don't need.

Here I use code to dynamically remove the comments even if new data is added. The code is gathered from the link provided below. It is at line 43.

[Source of the code used for dynamic code](https://github.com/uit-sok-1005-v23/uit-sok-1005-v23.github.io/blob/main/Global_Temperature.R "Line 43")

```{r}

lower <- lower[1:which(lower$Year %in% "Year")-1, ]
mid <- mid[1:which(mid$Year %in% "Year")-1, ]
tropopause <- tropopause[1:which(tropopause$Year %in% "Year")-1, ]
stratosphere <- stratosphere[1:which(stratosphere$Year %in% "Year")-1, ]


```

We are told to also only use data in the Globe column so I will now select it out of each dataset then combine the datasets into one.

```{r}
lower <- lower %>% 
  mutate(Date = ym(paste(Year, Mo))) %>% #Creating a Date variable
  select(Date , Year, Mo, Globe) %>%  #selecting and arranging the data we want
  rename(lower_globe = Globe) 
  
mid <- mid %>% 
  mutate(Date = ym(paste(Year, Mo))) %>% 
  select(Date ,Year, Mo, Globe) %>% 
  rename(mid_globe = Globe)

stratosphere <- stratosphere %>% 
  mutate(Date = ym(paste(Year, Mo))) %>% 
  select(Date, Year, Mo, Globe) %>% 
  rename(stratosphere_globe = Globe)

tropopause <- tropopause %>% 
  mutate(Date = ym(paste(Year, Mo))) %>% 
  select(Date, Year, Mo, Globe) %>% 
  rename(tropopause_globe = Globe)

```

We now combine them into one dataset we can work with and we convert strings to numeric.

We also create new variables for our averages per year

```{r}

df <- lower %>% 
  cbind(mid_globe = mid$mid_globe) %>% 
  cbind(stratosphere_globe = stratosphere$stratosphere_globe) %>% 
  cbind(tropopause_globe = tropopause$tropopause_globe) %>% 
  mutate_if(is.character, ~as.numeric(.))




```

Now that we have made our datasets, its time to start creating rolling averages

```{r}

rolling <- df %>% 
  mutate(rolling_lower = rollmean(lower_globe, 12,  fill=NA, align="right")) %>% 
  mutate(rolling_mid = rollmean(mid_globe, 12, fill=NA, align="right")) %>% 
  mutate(rolling_strato = rollmean(stratosphere_globe, 12, fill=NA, align="right")) %>% 
  mutate(rolling_tropo = rollmean(tropopause_globe, 12, fill=NA, align="right")) 


```

```{r}

rolling <- rolling %>% 
  mutate(average = (rolling_lower + rolling_mid + rolling_strato + rolling_tropo)/4)



```

Now that we have our dataset with our rolling averages and our average of the rolling averages its time to start plotting.

```{r}
rolling %>% 
  filter(Year >= 1980) %>% 
  ggplot(aes(x=Date))+
  geom_line(aes(y=rolling_lower, color="Lower atmosphere"))+
  geom_line(aes(y=rolling_mid, color="Middle atmosphere"))+
  geom_line(aes(y=rolling_strato, color="Stratosphere"))+
  geom_line(aes(y=rolling_tropo, color="Lower tropopause")) +
  geom_line(aes(y=average, color="Average temperature"), size=1.2)+
  labs(title="Temperature over time", color="Location", y="Temperature", x= "Year")+
  theme_bw()
```

```{r}

b = c("Year", "Date", "Mo")


rolling_long <- rolling %>% 
  select(Date, Year, Mo, average, rolling_lower, rolling_mid, rolling_strato, rolling_tropo) %>% 
  pivot_longer(-b, names_to = "Location", values_to = "Temperature")
```

```{r}

rolling_long %>% 
  ggplot(aes(x=Date, y=Temperature, group=Location)) +
  geom_line(aes(color=Location)) +
  ggtitle("Plot of temperature over time as yearly average") +
  ylab("Global Temperature") + xlab("Year")  
```

As a side project I also made yearly averages as shown below.

```{r}

df_yearly <- df %>% 
  group_by(Year) %>% #Grouping by year to calculate yearly averages 
  mutate(avg_lower=mean(lower_globe)) %>% 
  mutate(avg_mid=mean(mid_globe)) %>% 
  mutate(avg_strato=mean(stratosphere_globe)) %>% 
  mutate(avg_tropo=mean(tropopause_globe))


df_yearly %>% 
  ggplot(aes(x=Date, y=avg_lower)) + geom_line(col="blue") +
  geom_line(aes(x=Date, y=avg_mid), col="red") +
  geom_line(aes(x=Date, y=avg_strato), col="orange")+
  geom_line(aes(x=Date, y=avg_tropo), col="darkgreen")+
  ggtitle("Monthly averages")
```

```{r}

b = c("Year", "Date", "Mo")


Yearlyaverage <- df_yearly %>% 
  ungroup(Year) %>% 
  select(Date, Year, avg_lower, avg_mid, avg_strato, avg_tropo, Mo) %>% 
  pivot_longer(-b, names_to = "Location", values_to = "Temperature")



Yearlyaverage %>% 
  ggplot(aes(x=Year, y=Temperature, group=Location)) +
  geom_line(aes(color=Location)) +
  ggtitle("Plot of temperature over time as yearly average") +
  ylab("Global Temperature") + xlab("Year")  
```
