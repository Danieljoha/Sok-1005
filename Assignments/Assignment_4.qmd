---
title: "Assignment_4"
format: html
editor: visual
warning: false
message: false
echo: false
toc: true
tof: true
---

```{r}
rm (list = ls())
library(tidyverse)
library(lubridate)
library(quantmod)
library(janitor)

```

# Task 1

You will find the data for these tasks at the following url:

[**https://raw.githubusercontent.com/uit-sok-1005-v23/uit-sok-1005-v23.github.io/main/storedata.csv**](https://raw.githubusercontent.com/uit-sok-1005-v23/uit-sok-1005-v23.github.io/main/storedata.csv).

The data file contains 7185 observations and 9 variables.

```{r}
storedata <- read.csv("https://raw.githubusercontent.com/uit-sok-1005-v23/uit-sok-1005-v23.github.io/main/storedata.csv")
```

1: For the last 3 months of 2017, calculate the total Sales by month, for Region 1 and Region 9 in the Customer_Segment, Corporate, and Consumer. This output is Table 1.

```{r}

```

2: Make a plot of the monthly total Sales in Region 1 and Region 13 in 2015, 2016, and 2017. This output is Figure 1.

```{r}

```

3: In Figure 1, identify the months where the total Sales in Region 13 is greater than the total Sales in Region 1. This output is Table 2.

```{r}

```

4: Find the average Profit per Customer_Segment and Product_Category in 2017, for all regions except Region 3, 5 and 8. What segment produced the highest average profit? This output is Table 3.

```{r}

```

# Task 2

In this task, feel free to use any API or package/library that downloads the data to your session. Use code and download daily stock prices for Exxon Mobil Corporation (XOM), traded at NYSE. The Yahoo! Finance site is a convenient place to find [the data](https://finance.yahoo.com/quote/XOM?p=XOM&.tsrc=fin-srch) . Use the Adjusted closing price from January 4th 2010 as the starting date. And calculate the monthly average using trading volume as a weight, and save this variable as  "exxon".

Use code to download the daily Brent Crude Oil Price from [FRED](https://fred.stlouisfed.org/series/DCOILBRENTEU)  from January 4th 2010 as the starting date. And calculate the monthly arithmetic average. Save the monthly arithmetic average values as  "oil". 

In both variables, take December 2022, or 2022:12 for shorthand as a last data point.

```{r}

xom <- read.csv("https://query1.finance.yahoo.com/v7/finance/download/XOM?period1=1262563200&period2=1672444800&interval=1d&events=history&includeAdjustedClose=true")
xom <- xom %>% 
  as_tibble() %>% 
  clean_names() %>% 
  select(date, adj_close, volume) %>% 
  mutate(date = as.Date(date)) %>% 
  mutate(year = year(date), 
         month = month(date), 
         day = day(date)) %>% 
  group_by(year,month) %>% 
  summarise(exxon = weighted.mean(adj_close, volume)) %>% 
  mutate(date = make_date(year,month)) %>% 
  ungroup() %>% 
  select(date, exxon)


fredoil <- data.frame(getSymbols("DCOILBRENTEU", src = "FRED", auto.assign = FALSE))

fredoil <- fredoil %>% 
  mutate(date = ymd(rownames(fredoil))) %>% 
  rename(price = 1) %>% 
  select(date, price) %>% 
  filter(date >="2010-01-04",date<"2022-12-31") 

fredoil <- fredoil %>% 
  mutate(year = year(date), 
         month = month(date), 
         day = day(date)) %>% 
  group_by(year,month) %>% 
  summarise(oil= mean(price, na.rm=TRUE)) %>% 
  mutate(date = make_date(year,month)) %>% 
  as_tibble() %>% 
  ungroup() %>% 
  select(date, oil)


task2 <- xom %>% 
  cbind(oil = fredoil$oil)

rm(fredoil)
rm(xom)
```

Plot both variables, i.e., exxon and oil " in the same plot window. Here, the x-axis should be the  "date" variable.  Comment on the plots. 

```{r}
#| fig-cap: Figure for Exxon share price and Oil price
task2 %>% 
  ggplot(aes(x=date)) + 
  geom_line(aes(y=oil, color="Brent Crude Oil monthly average")) +
  geom_line(aes(y=exxon, color="Exxon share price")) +
  labs(color="", x="", y="")+
  theme_bw()+
  theme(legend.position="bottom")+
  scale_x_date(expand = c(0,0)) +
  scale_y_continuous(labels = scales::dollar) 

  

```

Now take "exxon" as a y-variable and "oil" as an x-variable. 

```{r}
#| fig-cap: Figure for exxon as y and oil as x
task2 %>% 
  ggplot(aes(x=oil, y=exxon)) + 
  geom_line()+
  scale_x_continuous(expand = c(0,0)) +
  geom_smooth(method=lm)
```

Use R's  [lm() function](https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/lm). Set the variable on the y-axis and x-axis, and specify the data set. 

```{r}
lm(exxon ~ oil, data = task2)

```

After "running" the code, how do you interpret the estimated coefficients? 

The intercept coefficient shows the estimated value of exxon when oil is equal to 0, but it may now have a practical interpretation in this context since its unlikely for oil price to be 0.

The slope coefficient of 0.1282 means that for every one increase in x, exxon's value will increase by 0.1282. This menas there is a positive linear relationship between oil prices and Exxon's share price, indicating that higher oil prices are associated with higher share prices for Exxon.
